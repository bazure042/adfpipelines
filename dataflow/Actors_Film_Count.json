{
	"name": "Actors_Film_Count",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Film_Actor_Table_pa1",
						"type": "DatasetReference"
					},
					"name": "FilmActor"
				},
				{
					"dataset": {
						"referenceName": "Actors_Table_Pa1",
						"type": "DatasetReference"
					},
					"name": "Actors"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Transfromation_Actors_Film_Count_pa1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "join2"
				},
				{
					"name": "select1"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          actor_id as string,",
				"          film_id as string,",
				"          last_update as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> FilmActor",
				"source(output(",
				"          actor_id as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          last_update as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Actors",
				"FilmActor aggregate(groupBy(actor_id),",
				"     No_of_Films = count()) ~> aggregate1",
				"select1, aggregate1 join(select1@actor_id == aggregate1@actor_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"Actors select(mapColumn(",
				"          actor_id,",
				"          first_name,",
				"          last_name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"join2 select(mapColumn(",
				"          actor_id = aggregate1@actor_id,",
				"          first_name,",
				"          last_name,",
				"          No_of_Films",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Actors_Wise_Film_Count_pa1.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}